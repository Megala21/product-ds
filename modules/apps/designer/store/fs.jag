<%
(function () {
    var log = new Log();
    //TODO: revisit this code
    var serverUrl = (function () {
        var configs = require('/configs/designer.json');
        var url = configs.store.url;
        if (url) {
            return url;
        }
        var carbon = require('carbon');
        //TODO: get host name from carbon.xml
        var ip = carbon.server.ip;
        var port = carbon.server.httpsPort;
        url = 'https://' + ip + ':' + port;
        return url;
    }());

    var widgetsDir = '/assets/gadgets';
    var widJson = 'widget.json';

    var layoutsDir = '/assets/layouts';
    var layouts = [];
    var layJson = 'layout.json';

    var dir;
    var jsonType;

    var configs = function (name) {
        var file = new File(dir + '/' + name + '/' + jsonType);
        file.open('r');
        var config = JSON.parse(file.readAll());
        file.close();
        return config;
    };

    var updateGadget = function (gadget) {
        var url = gadget.data.url;
        if (!url.match('/(http://)|(https://)/i')) {
            gadget.data.url = serverUrl + url;
        }
        url = gadget.thumbnail;
        if (!url.match('/(http://)|(https://)/i')) {
            gadget.thumbnail = serverUrl + url;
        }
        return gadget;
    };

    var updateLayout = function (layout) {
        var url = layout.url;
        if (!url.match('/(http://)|(https://)/i')) {
            layout.url = serverUrl + url;
        }
        url = layout.thumbnail;
        if (!url.match('/(http://)|(https://)/i')) {
            layout.thumbnail = serverUrl + url;
        }
        return layout;
    };

    var name = request.getParameter('name');
    var type = request.getParameter('type');

    if (type == 'gadget') {
        dir = widgetsDir;
        jsonType = widJson;
    } else if (type == 'layout') {
        dir = layoutsDir;
        jsonType = layJson;
    }

    var config;
    var data;
    if (name) {
        config = configs(name);
        if (type === 'gadget') {
            config = updateGadget(config);
        }
        if (type === 'layout') {
            config = updateLayout(config);
        }
        response.contentType = 'application/json';
        print(config);
        return;
    }
    var file = new File(dir);
    var files = file.listFiles();
    data = [];
    files.forEach(function (file) {
        if (!file.isDirectory()) {
            return;
        }
        var config = configs(file.getName());
        if (type == 'gadget') {
            data.push(updateGadget(config));
        } else if (type == 'layout') {
            data.push(updateLayout(config));
        }
    });

    response.contentType = 'application/json';
    print(data);
}());
%>